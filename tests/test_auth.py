import requests

BASE_URL = "http://localhost:8000/api"  # üîÅ –£–∫–∞–∂–∏ –Ω—É–∂–Ω—ã–π –∞–¥—Ä–µ—Å

# ‚úÖ –ë–∞–∑–æ–≤–∞—è –æ–±—ë—Ä—Ç–∫–∞ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
class RentalsApi:
    def __init__(self, role):
        self.username = f"test_{role}"
        self.password = "Testpass123!"
        self.role = role
        self.token = None
        self.headers = {}
        self.register_if_needed()
        self.login()

    # üìå –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    def register_if_needed(self):
        url = f"{BASE_URL}/auth/register/"
        data = {
            "username": self.username,
            "email": f"{self.username}@example.com",
            "password": self.password,
            "password2": self.password,
            "role": self.role
        }
        response = requests.post(url, json=data)
        if response.status_code == 400 and "username" in response.json():
            print(f"‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.username} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        elif response.status_code == 201:
            print(f"‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {self.username}")
        else:
            raise Exception(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {response.text}")

    # üîë –í—Ö–æ–¥ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ JWT —Ç–æ–∫–µ–Ω–∞
    def login(self):
        url = f"{BASE_URL}/auth/login/"
        data = {
            "username": self.username,
            "password": self.password
        }
        response = requests.post(url, json=data)
        assert response.status_code == 200, f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response.text}"
        self.token = response.json().get("access")
        assert self.token, "‚ùå –¢–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω"
        self.headers = {"Authorization": f"Bearer {self.token}"}
        print(f"‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω: {self.username}")

    # üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ–±–µ
    def get_me(self):
        url = f"{BASE_URL}/auth/me/"
        response = requests.get(url, headers=self.headers)
        assert response.status_code == 200, f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ /me/: {response.text}"
        return response.json()


if __name__ == "__main__":
    # üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —Å—ä—ë–º—â–∏–∫–∞ (tenant)
    tenant = RentalsApi("tenant")
    me_tenant = tenant.get_me()
    assert me_tenant["role"] == "tenant", "‚ùå –†–æ–ª—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å tenant"
    print(f"üßæ Tenant user verified: {me_tenant['username']}")

    # üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –∞—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª—è (landlord)
    landlord = RentalsApi("landlord")
    me_landlord = landlord.get_me()
    assert me_landlord["role"] == "landlord", "‚ùå –†–æ–ª—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å landlord"
    print(f"üßæ Landlord user verified: {me_landlord['username']}")

    print("‚úÖ –¢–µ—Å—Ç—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ —Ä–æ–ª–µ–π —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã")

